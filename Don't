-- Load OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

-- Create the main GUI window
local Window = OrionLib:MakeWindow({
    Name = "Merge for diamond (made by ducky)",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CatPiece"
})

-- Create the "Main" tab
local Tab1 = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the "Commands" tab
local Tab2 = Window:MakeTab({
    Name = "Commands",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create the "Command List" tab
local CommandListTab = Window:MakeTab({
    Name = "Command List",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add the list of commands to the "Command List" tab
CommandListTab:AddLabel("!addcoins [amount] - Adds the specified amount of coins.")
CommandListTab:AddLabel("!addgems [amount] - Adds the specified amount of gems.")
CommandListTab:AddLabel("!rainblocks [amount] - Rains the specified number of blocks.")
CommandListTab:AddLabel("!rebirthloop - Starts the rebirth loop.")
CommandListTab:AddLabel("!stoprebirthloop - Stops the rebirth loop.")

-- Section for admin commands
local Section = Tab2:AddSection({
    Name = "Admin Commands"
})

-- Variables to control the loop
local rebirthLoop = false

-- Function to stop the rebirth loop
local function stopRebirthLoop()
    rebirthLoop = false
end

-- Button for adding coins
Tab2:AddTextbox({
    Name = "Add Coins",
    Default = "1000000",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            local args = { "Cash", amount }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddRewardEvent"):FireServer(unpack(args))
        else
            warn("Invalid amount for coins.")
        end
    end
})

-- Button for adding gems
Tab2:AddTextbox({
    Name = "Add Gems",
    Default = "1000",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            local args = { "Gems", amount }
            game:GetService("ReplicatedStorage").Remotes.AddRewardEvent:FireServer(unpack(args))
        else
            warn("Invalid amount for gems.")
        end
    end
})

-- Button for buying a potion
Tab2:AddButton({
    Name = "Buy Potion",
    Callback = function()
        local args = { "Potion", 1 }
        game:GetService("ReplicatedStorage").Remotes.BuyPotionEvent:FireServer(unpack(args))
    end
})

-- Button for starting rebirth loop
Tab2:AddButton({
    Name = "Start Rebirth Loop",
    Callback = function()
        rebirthLoop = true
        while rebirthLoop do
            local args = { 0, 0, 0 }
            game:GetService("ReplicatedStorage").Remotes.RebirthConfirmEvent:FireServer(unpack(args))
            wait(1) -- Adjust the delay as needed
        end
    end
})

-- Button for stopping rebirth loop
Tab2:AddButton({
    Name = "Stop Rebirth Loop",
    Callback = function()
        stopRebirthLoop()
    end
})

-- Button for upgrading a specific level
Tab2:AddTextbox({
    Name = "Upgrade Level",
    Default = "47",
    TextDisappear = true,
    Callback = function(value)
        local level = tonumber(value)
        if level then
            local args = { "Upgrade", level, 0 }
            game:GetService("ReplicatedStorage").Remotes.UpgradeEvent:FireServer(unpack(args))
        else
            warn("Invalid level for upgrade.")
        end
    end
})

-- Button for raining blocks
Tab2:AddTextbox({
    Name = "Rain Blocks",
    Default = "10",
    TextDisappear = true,
    Callback = function(value)
        local count = tonumber(value)
        if count then
            for i = 1, count do
                game:GetService("ReplicatedStorage").Remotes.RainEvent:FireServer()
            end
        else
            warn("Invalid number of blocks to rain.")
        end
    end
})

-- Add labels in the "Main" tab
Tab1:AddLabel("Made by VG ducky")
Tab1:AddLabel("Update soon")

OrionLib:Init()

-- Command Processing for Chat
local function handleChatCommand(player, msg)
    local prefix = "!"
    local args = string.split(msg, " ")
    local command = args[1]
    local value = tonumber(args[2])

    if command:sub(1, #prefix) == prefix then
        command = command:sub(#prefix + 1) -- Remove the prefix
    end

    if command == "addcoins" then
        local amount = value or 1000000
        game:GetService("ReplicatedStorage").Remotes.AddRewardEvent:FireServer("Cash", amount)
    elseif command == "addgems" then
        local amount = value or 1000
        game:GetService("ReplicatedStorage").Remotes.AddRewardEvent:FireServer("Gems", amount)
    elseif command == "rainblocks" then
        local count = value or 10
        for i = 1, count do
            game:GetService("ReplicatedStorage").Remotes.RainEvent:FireServer()
        end
    elseif command == "rebirthloop" then
        rebirthLoop = true
        while rebirthLoop do
            game:GetService("ReplicatedStorage").Remotes.RebirthConfirmEvent:FireServer(0, 0, 0)
            wait(1)
        end
    elseif command == "stoprebirthloop" then
        stopRebirthLoop()
    else
        warn("Unknown command: " .. command)
    end
end

-- Connect to the PlayerAdded event
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        pcall(function() handleChatCommand(player, msg) end)
    end)
end)

OrionLib:Init()
